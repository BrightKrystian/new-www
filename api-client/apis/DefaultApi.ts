/* tslint:disable */
/* eslint-disable */
/**
 * Bright Website API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  EbookSignUp200Response,
  EbookSignUpRequest,
} from '../models';
import {
    EbookSignUp200ResponseFromJSON,
    EbookSignUp200ResponseToJSON,
    EbookSignUpRequestFromJSON,
    EbookSignUpRequestToJSON,
} from '../models';

export interface EbookSignUpOperationRequest {
    ebookName: string;
    ebookSignUpRequest: EbookSignUpRequest;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * Signs user up for newsletter and returns an ebook
     * Sign up for an e-book
     */
    async ebookSignUpRaw(requestParameters: EbookSignUpOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EbookSignUp200Response>> {
        if (requestParameters.ebookName === null || requestParameters.ebookName === undefined) {
            throw new runtime.RequiredError('ebookName','Required parameter requestParameters.ebookName was null or undefined when calling ebookSignUp.');
        }

        if (requestParameters.ebookSignUpRequest === null || requestParameters.ebookSignUpRequest === undefined) {
            throw new runtime.RequiredError('ebookSignUpRequest','Required parameter requestParameters.ebookSignUpRequest was null or undefined when calling ebookSignUp.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/ebooks/{ebookName}/sign-up`.replace(`{${"ebookName"}}`, encodeURIComponent(String(requestParameters.ebookName))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: EbookSignUpRequestToJSON(requestParameters.ebookSignUpRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EbookSignUp200ResponseFromJSON(jsonValue));
    }

    /**
     * Signs user up for newsletter and returns an ebook
     * Sign up for an e-book
     */
    async ebookSignUp(requestParameters: EbookSignUpOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EbookSignUp200Response> {
        const response = await this.ebookSignUpRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
