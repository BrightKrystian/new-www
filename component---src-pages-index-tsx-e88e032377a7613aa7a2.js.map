{"version":3,"sources":["webpack://bright-website/./src/components/subcomponents/Date.tsx","webpack://bright-website/./src/helpers/pathHelpers.ts","webpack://bright-website/./src/components/home/Header.tsx","webpack://bright-website/./src/components/home/Header.module.scss","webpack://bright-website/./src/components/home/Achievements.tsx","webpack://bright-website/./src/components/home/Achievements.module.scss","webpack://bright-website/./src/components/home/OurServices.tsx","webpack://bright-website/./src/components/home/ourServices/OurServices.module.scss","webpack://bright-website/./src/components/shared/ImageSpacer.tsx","webpack://bright-website/./src/components/home/SuccessStoryBox.tsx","webpack://bright-website/./src/components/home/Projects.tsx","webpack://bright-website/./src/components/subcomponents/PopularBlogPostBox.tsx","webpack://bright-website/./src/components/home/PopularBlogPosts.tsx","webpack://bright-website/./src/pages/index.tsx"],"names":["updated","date","dateObject","Date","dateTime","toString","data-updated","itemProp","Intl","DateTimeFormat","year","month","day","format","getJobPath","path","split","pop","replace","getFileNameOnly","deleteTimestampFromUrl","Header","className","classNames","href","routeLinks","Achievements","elements","number","getFullYear","label","map","key","services","icon","WebDevelopmentIcon","title","description","MobileAppDevelopmentIcon","ProductDesignIcon","BlockchainIcon","OurServices","service","index","Container","styled","ImagesContainer","ImageContainer","images","S","src","alt","ImageSpacer","image","Title","Image","props","Link","to","slug","G","imgStyle","objectFit","height","width","getImage","Projects","posts","useStaticQuery","GQL","allMarkdownRemark","edges","v","node","post","frontmatter","fields","DetailsContainer","PopularBlogPostBoxContainer","DateContainer","TagsContainer","url","tags","join","id","Page","Carousel","TechnologyTags","Ratings","Contact"],"mappings":"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","file":"component---src-pages-index-tsx-e88e032377a7613aa7a2.js","sourcesContent":["import React from \"react\"\n\nconst DateFormatter: React.FC<{ updated?: boolean; date: string }> = ({\n  updated,\n  date,\n}) => {\n  const dateObject = new Date(date)\n  return (\n    <time\n      dateTime={date.toString()}\n      data-updated={updated && \"true\"}\n      itemProp=\"datePublished\"\n    >\n      {new Intl.DateTimeFormat(\"en-GB\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      }).format(dateObject)}\n    </time>\n  )\n}\n\nexport default DateFormatter\n","export const getUrlForAbsolutePath = (path: string) => {\n  return path.split(\"pages\").pop().replace(\".md\", \"\")\n}\n\nexport const getJobPath = (path: string) => {\n  return path.split('jobs').pop().replace('.md', '')\n}\n\nexport const getFileNameOnly = (path: string) => {\n  return path.split(\"/\").pop().replace(\".md\", \"\")\n}\n\nexport const deleteTimestampFromUrl = (path: string) => {\n  return path.replace(/([0-9]{4})-([0-9]{2})-([0-9]{2})-/, \"\")\n}\n","import React from 'react'\nimport classNames from 'classnames'\n\nimport { routeLinks } from '../../config/routing'\nimport { Section } from '../shared'\n\nimport * as styles from './Header.module.scss'\n\nexport const Header = () => {\n  return (\n    <Section className={classNames(styles.header)}>\n      <div className='hero-body'>\n        <div className='container'>\n          <div>\n            <h1 className={classNames('title mt-6', styles.title)}>\n              let's create software that <span>matters</span>\n            </h1>\n          </div>\n          <div className='buttons is-hidden-tablet'>\n            <a className='button estimate is-primary' href={routeLinks.startProject}>\n              <strong>estimate project</strong>\n            </a>\n          </div>\n        </div>\n      </div>\n    </Section>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport const header = \"Header-module--header--BjFY2\";\nexport const title = \"Header-module--title--1asBa\";","import React from 'react'\n\nimport { SectionBlack } from '../shared'\n\nimport * as styles from './Achievements.module.scss'\n\nexport const Achievements = () => {\n  const elements = [\n    { number: (new Date()).getFullYear() - 2012, label: 'Years' },\n    { number: 53, label: 'Projects' },\n    { number: 40, label: 'Clients' },\n    { number: 59, label: 'Team' },\n    //{ number: authors.length, label: 'Team' }, --- @todo: should be uncommented after making all members\n  ]\n\n  return (\n    <SectionBlack className={styles.achievements}>\n      <div className='container'>\n        <div className='columns'>\n          {elements.map(({ number, label }) => (\n            <div className='column is-inline-block-mobile is-half-mobile' key={label}>\n              <div className={styles.number}>{number}</div>\n              <div className={styles.label}>{label}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </SectionBlack>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport const achievements = \"Achievements-module--achievements--3s5rr\";\nexport const number = \"Achievements-module--number--1NR_e\";\nexport const label = \"Achievements-module--label--G4GP8\";","import React from 'react'\nimport classNames from 'classnames'\n\nimport {MoreButton, Section, SectionTitle, TextTitle, TextRegular} from '../shared'\nimport BlockchainIcon from '../../assets/blockchain.svg'\nimport MobileAppDevelopmentIcon from '../../assets/mobileAppDevelopment.svg'\nimport ProductDesignIcon from '../../assets/productDesign.svg'\nimport WebDevelopmentIcon from '../../assets/webDevelopment.svg'\nimport { routeLinks } from '../../config/routing'\n\nimport * as styles from './ourServices/OurServices.module.scss'\n\nconst services = [\n  {\n    icon: WebDevelopmentIcon,\n    title: 'web development',\n    description: 'We provide a wide range of custom full stack web development services. We rely on a rich technology stack, including JavaScript, CSS, HTML, Java, Node.js, AWS, MySQL, PostgreSQL, and more.'\n  },\n  {\n    icon: MobileAppDevelopmentIcon,\n    title: 'mobile development',\n    description: 'We offer native mobile app development for iOS and Android. Our app development team has broad experience in building applications in Swift, Java, and Kotlin.'\n  },\n  {\n    icon: ProductDesignIcon,\n    title: 'product design',\n    description: 'You can count on our expertise in interface analysis, animation design, UX and UI design, root cause analysis, and more. We have worked on design projects of all sizes.'\n  },\n  {\n    icon: BlockchainIcon,\n    title: 'blockchain',\n    description: 'Our team has a vast experience in blockchain projects, including the development of a solution for a global humanitarian organization. Blockchain technology is what we’re really good at!'\n  },\n]\n\nexport const OurServices: React.FC = () => {\n  return (\n    <Section className='has-text-centered'>\n      <SectionTitle>our services</SectionTitle>\n      <div className='columns is-multiline has-justify-content-center'>\n        {services.map((service, index) => (\n          <div className={classNames('column is-half', styles.service)} key={index}>\n            <div className={styles.icon}><service.icon /></div>\n            <TextTitle>{service.title}</TextTitle>\n            <TextRegular>{service.description}</TextRegular>\n          </div>\n        ))}\n      </div>\n      <MoreButton href={routeLinks.whatWeOffer}>learn more</MoreButton>\n    </Section>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport const title = \"OurServices-module--title--3Sd3H\";\nexport const service = \"OurServices-module--service--3P1Ko\";\nexport const icon = \"OurServices-module--icon--1pQ8V\";","import React from \"react\"\nimport styled from \"styled-components\"\nimport { StaticImage } from 'gatsby-plugin-image'\n\nconst Container = styled.div`\n  width: 100vw;\n  left: 0;\n  overflow: hidden;\n`\n\nconst ImagesContainer = styled.div`\n  width: 130%;\n  left: -15%;\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst ImageContainer = styled.div`\n  width: 25%;\n  height: 300px;\n  overflow: hidden;\n  margin: 10px;\n\n  @media (max-width: 768px) {\n    height: 100px;\n  }\n`\nconst Image = styled.img`\n  object-fit: cover;\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n`\n\nconst images = [\n <StaticImage src=\"../../../static/images/imagespacer/1.png\" alt={'image spacer 1'} />,\n <StaticImage src=\"../../../static/images/imagespacer/2.png\" alt={'image spacer 2'} />,\n <StaticImage src=\"../../../static/images/imagespacer/3.png\" alt={'image spacer 3'} />,\n <StaticImage src=\"../../../static/images/imagespacer/4.png\" alt={'image spacer 4'} />,\n]\n\nexport const ImageSpacer: React.FC = () => {\n  return (\n    <Container>\n      <ImagesContainer>\n        {images.map((image, index) => (\n          <ImageContainer key={index}>\n            {image}\n          </ImageContainer>\n        ))}\n      </ImagesContainer>\n    </Container>\n  )\n}\n","import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { GatsbyImage, getImage, IGatsbyImageData } from 'gatsby-plugin-image'\nimport { Link } from 'gatsby'\n\nconst Container = styled.div`\n  border: 1px solid #d3d3d3;\n  width: 100%;\n  max-width: 550px;\n  margin: 1rem;\n  padding: 2em;\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 15px 15px 40px -25px rgba(170, 170, 170, 1);\n  }\n\n  @media screen and (max-width: 767px) {\n    margin: 1rem 0;\n  }\n`\n\nconst Title = styled.h3`\n  text-align: center;\n  font-family: \"SuisseIntl Black\", sans-serif;\n  font-style: normal;\n  color: black;\n`\n\nconst Image = styled.figure`\n  margin-top: 1em;\n  height: 300px;\n\n  @media (max-width: 768px) {\n    height: 150px;\n  }\n\n  .gatsby-image-wrapper {\n    height: 100%;\n    width: 100%;\n    object-fit: contain;\n  }\n`\n\nexport interface SuccessStoryBoxProps {\n  image: IGatsbyImageData\n  title: string\n  slug: string\n  className?: string\n}\n\nconst SuccessStoryBox: FC<SuccessStoryBoxProps> = props => {\n  return (\n    <Container className={props.className}>\n      <Link to={props.slug}>\n        <Title>{props.title}</Title>\n        <Image className='image'>\n          <GatsbyImage imgStyle={{ objectFit: 'contain', height: '100%', width: '100%' }} image={getImage(props.image)!}\n                       alt={props.title} />\n        </Image>\n      </Link>\n    </Container>\n  )\n}\n\nexport default SuccessStoryBox\n","import { graphql, useStaticQuery } from 'gatsby'\nimport React from 'react'\n\nimport { MoreButton, Section, SectionTitle } from '../shared'\nimport SuccessStoryBox from './SuccessStoryBox'\nimport { routeLinks } from '../../config/routing'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\n\nexport const Projects: React.FC = () => {\n  const { allMarkdownRemark: { edges } } = useStaticQuery(GQL)\n  const posts: Array<{\n    frontmatter: {\n      image: IGatsbyImageData\n      layout: string\n      published: boolean | null\n      slug: string\n      title: string\n    }\n    fields: {\n      slug: string\n    }\n  }> = edges.map((v: any) => v.node)\n\n  return (\n    <Section>\n      <SectionTitle>success stories</SectionTitle>\n      <div className=\"columns is-multiline has-justify-content-center\">\n        {posts.map(post => (\n            <SuccessStoryBox\n              className=\"column is-6\"\n              key={'post' + post.frontmatter.title}\n              title={post.frontmatter.title}\n              image={post.frontmatter.image}\n              slug={post.fields.slug}\n            />\n        ))}\n      </div>\n      <MoreButton href={routeLinks.projects}>view more</MoreButton>\n    </Section>\n  )\n}\n\nconst GQL = graphql`\n  {\n      allMarkdownRemark(\n        filter: {\n          frontmatter: { layout: { eq: \"project\" }, published: { ne: false } }\n        }\n        limit: 6\n        sort: { order: ASC, fields: frontmatter___order }\n      ) {\n        edges {\n          node {\n            frontmatter {\n              title\n              image {\n                  childImageSharp {\n                      gatsbyImageData\n                  }\n              }\n              layout\n              slug\n              published\n            }\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n`\n","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport DateFormatter from \"./Date\"\nimport { deleteTimestampFromUrl } from \"../../helpers/pathHelpers\"\nimport { GatsbyImage, getImage, IGatsbyImageData } from 'gatsby-plugin-image'\n\nconst DetailsContainer = styled.div`\n  padding: 2em;\n`\n\nconst Image = styled.figure`\n  height: 300px;\n  border-bottom: 1px solid #d3d3d3;\n\n  @media (max-width: 480px) {\n    height: 200px;\n  }\n  .gatsby-image-wrapper {\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n  }\n`\n\nconst PopularBlogPostBoxContainer = styled.div`\n  width: 100%;\n  height: 460px;\n  border: 1px solid #d3d3d3;\n  margin-bottom: 1em !important;\n  @media (max-width: 480px) {\n    height: auto;\n  }\n\n  &:hover {\n    box-shadow: 15px 15px 40px -25px rgba(170, 170, 170, 1);\n  }\n`\n\nconst DateContainer = styled.div`\n  font-size: 14px;\n  border-right: 1px solid black;\n  display: flex;\n  align-items: center;\n  padding-top: 0;\n  padding-bottom: 0;\n`\n\nconst TagsContainer = styled.div`\n  /* margin-bottom: 1em; */\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  padding-top: 0;\n  padding-bottom: 0;\n`\n\nconst Title = styled.div`\n  margin: 1em 0;\n  font-family: \"SuisseIntl Black\", sans-serif;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 22px;\n  /* letter-spacing: 1px; */\n`\n\nexport interface PopularBlogPostBoxProps {\n  date: string\n  tags: string[]\n  image: IGatsbyImageData\n  url: string\n  title: string\n}\n\nconst PopularBlogPostBox: React.FC<PopularBlogPostBoxProps> = props => {\n  return (\n    <PopularBlogPostBoxContainer>\n      <Link to={deleteTimestampFromUrl(props.url)}>\n        <Image className=\"image\">\n          <GatsbyImage imgStyle={{objectFit: 'cover', width: '100%', height: '100%'}} image={getImage(props.image)!}  alt={props.title}/>\n        </Image>\n      </Link>\n      <DetailsContainer>\n        <div className=\"columns is-mobile is-4 is-variable\">\n          <DateContainer className=\"column is-narrow\">\n            <DateFormatter date={props.date} />\n          </DateContainer>\n          <TagsContainer className=\"column\">\n            {props.tags.join(\", \")}\n          </TagsContainer>\n        </div>\n        <Title>{props.title}</Title>\n      </DetailsContainer>\n    </PopularBlogPostBoxContainer>\n  )\n}\n\nexport default PopularBlogPostBox\n","import { useStaticQuery, graphql } from \"gatsby\"\nimport React, { FC } from \"react\"\nimport styled from \"styled-components\"\nimport { MoreButton, Section, SectionTitle } from \"../shared\"\nimport PopularBlogPostBox from \"../subcomponents/PopularBlogPostBox\"\nimport { routeLinks } from '../../config/routing'\n\nexport interface PopularBlogPostsProps {}\n\nconst PopularBlogPosts: FC<PopularBlogPostsProps> = props => {\n  const {\n    posts: { edges: posts },\n  } = useStaticQuery(graphql`\n    query {\n      posts: allMarkdownRemark(\n        filter: {\n          frontmatter: {\n            layout: { eq: \"post\" }\n            published: { ne: false }\n            hidden: { ne: true }\n          }\n        }\n        sort: { fields: fileAbsolutePath, order: DESC }\n        limit: 4\n      ) {\n        edges {\n          post: node {\n            id\n            fileAbsolutePath\n            timeToRead\n            excerpt(pruneLength: 500)\n            frontmatter {\n              excerpt\n              comments\n              image {\n                  childImageSharp {\n                      gatsbyImageData\n                  }\n              }\n              author\n              title\n              tags\n              date\n            }\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Section>\n      <SectionTitle className=\"is-size-3\">what’s new on our blog</SectionTitle>\n      <div className=\"columns is-multiline is-12\">\n        {posts.map(({ post }: any) => {\n          return (\n            <div className=\"column is-6\" key={post.frontmatter.title}>\n              <PopularBlogPostBox\n                date={post.frontmatter.date}\n                tags={post.frontmatter.tags}\n                image={post.frontmatter.image}\n                url={post.fields.slug}\n                title={post.frontmatter.title}\n                key={\"post\" + post.frontmatter.title}\n              >\n                {post.id}\n              </PopularBlogPostBox>\n            </div>\n          )\n        })}\n      </div>\n      <MoreButton href={routeLinks.blog}>read more</MoreButton>\n    </Section>\n  )\n}\n\nexport default PopularBlogPosts\n","import React from 'react'\n\nimport {Page} from '../layout/Page'\nimport {Header} from '../components/home/Header'\nimport {Achievements} from '../components/home/Achievements'\nimport {Carousel} from '../components/shared/Carousel'\nimport {TechnologyTags} from '../components/shared/TechnologyTags'\nimport {OurServices} from '../components/home/OurServices'\nimport {ImageSpacer} from '../components/shared/ImageSpacer'\nimport {Projects} from '../components/home/Projects'\nimport Ratings from '../components/shared/Ratings'\nimport {Contact} from '../components/shared/Contact'\nimport { HideTablet } from '../components/shared'\n\nimport PopularBlogPosts from '../components/home/PopularBlogPosts'\n\nimport '../styles/_page-index.scss'\nexport default () => {\n  return (\n    <Page className=\"page-index\">\n      <Header />\n      <Achievements />\n      <HideTablet>\n        <Carousel />\n      </HideTablet>\n      <TechnologyTags />\n      <OurServices />\n      <ImageSpacer />\n\n      <Projects />\n      <Ratings />\n\n      <PopularBlogPosts />\n      <Contact />\n    </Page>\n  )\n}\n"],"sourceRoot":""}