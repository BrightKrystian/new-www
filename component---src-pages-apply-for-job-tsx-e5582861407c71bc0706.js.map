{"version":3,"sources":["webpack://bright-website/./src/components/subcomponents/BackButton.tsx","webpack://bright-website/./src/pages/apply-for-job.tsx"],"names":["props","Link","to","url","className","src","label","useState","name","setName","email","setEmail","message","setMessage","checkedRules","setCheckedRules","error","setError","success","setSuccess","fileName","setFileName","fileRef","useRef","data-form-type","onSubmit","e","preventDefault","wrapValue","value","sendMail","cv","current","files","FormType","then","catch","err","console","type","placeholder","onChange","target","maxLength","required","accept","ref","currentTarget","checked","href","routeLinks","disabled"],"mappings":"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","file":"component---src-pages-apply-for-job-tsx-e5582861407c71bc0706.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\ninterface BackButtonProps {\n  url: string\n  label: string\n}\n\nconst BackButton: React.FC<BackButtonProps> = props => {\n  return (\n    <Link to={props.url} className=\"button is-white\">\n      <span className=\"icon is-small\">\n        <img src=\"/images/arrow-back.svg\" />\n      </span>{\" \"}\n      <span>{props.label}</span>\n    </Link>\n  )\n}\n\nexport default BackButton\n","import React, { useRef, useState } from \"react\"\n\nimport { Page } from \"../layout/Page\"\nimport BackButton from \"../components/subcomponents/BackButton\"\nimport { FormType, sendMail } from \"../helpers/mail\"\nimport { routeLinks } from \"../config/routing\"\n\nconst ApplyForJobPage: React.FC = () => {\n  const [name, setName] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [message, setMessage] = useState(\"\")\n  const [checkedRules, setCheckedRules] = useState(false)\n  const [error, setError] = useState(false)\n  const [success, setSuccess] = useState(false)\n  const [fileName, setFileName] = useState(\"\")\n\n  const fileRef = useRef<HTMLInputElement>()\n\n  const onFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    const wrapValue = value => ({\n      value,\n    })\n    sendMail(\n      {\n        name: wrapValue(name),\n        email: wrapValue(email),\n        message: wrapValue(message),\n        cv: {\n          value: fileRef.current.files[0],\n          fileName: fileRef.current.files[0].name,\n        },\n      },\n      FormType.job\n    )\n      .then(() => {\n        setError(false)\n        setSuccess(true)\n      })\n      .catch(err => {\n        console.error(err)\n        setError(true)\n        setSuccess(false)\n      })\n  }\n\n  const onFileUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFileName(e.target.files[0].name)\n  }\n\n  return (\n    <Page>\n      <div className=\"container\">\n        <form className=\"section\" data-form-type=\"job\" onSubmit={onFormSubmit}>\n          <div className=\"field\">\n            <label className=\"label\">Name</label>\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"e.g Alex Smith\"\n                name=\"name\"\n                value={name}\n                onChange={e => setName(e.target.value)}\n                maxLength={256}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Email</label>\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                type=\"email\"\n                placeholder=\"e.g. alexsmith@gmail.com\"\n                name=\"email\"\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                maxLength={256}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Message</label>\n            <div className=\"control\">\n              <textarea\n                className=\"textarea\"\n                placeholder=\"Your message\"\n                maxLength={5000}\n                value={message}\n                onChange={e => setMessage(e.target.value)}\n                name=\"message\"\n                required\n              ></textarea>\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <div className=\"file has-name\">\n              <label className=\"file-label\">\n                <input\n                  className=\"file-input\"\n                  type=\"file\"\n                  name=\"cv\"\n                  accept=\".pdf\"\n                  onChange={onFileUpload}\n                  ref={fileRef}\n                />\n                <span className=\"file-cta\">\n                  <span className=\"file-icon\">ðŸ“„</span>\n                  <span className=\"file-label\">Upload CV</span>\n                </span>\n                <span className=\"file-name\">{fileName}</span>\n              </label>\n            </div>\n            <p className=\"help\">Max file size 10MB.</p>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                name=\"accept-policy\"\n                required\n                value=\"yes\"\n                onChange={e => setCheckedRules(e.currentTarget.checked)}\n                checked={checkedRules}\n              />\n              &nbsp; I accept the{\" \"}\n              <a href={routeLinks.privacyPolicy} target=\"_blank\">\n                Privacy Policy\n              </a>\n            </label>\n          </div>\n\n          <div className=\"field\">\n            <input\n              type=\"submit\"\n              className=\"button is-primary\"\n              value=\"Submit\"\n              disabled={!(checkedRules && name && email && message)}\n            />\n            {success && (\n              <p className=\"help is-success\">\n                Thank you! Your submission has been received!\n              </p>\n            )}\n            {error && (\n              <p className=\"help is-danger\">\n                Oops! Something went wrong while submitting the form.\n              </p>\n            )}\n          </div>\n          <BackButton label=\"Open positions\" url={`${routeLinks.career}#open-positions`} />\n        </form>\n      </div>\n    </Page>\n  )\n}\n\nexport default ApplyForJobPage\n"],"sourceRoot":""}