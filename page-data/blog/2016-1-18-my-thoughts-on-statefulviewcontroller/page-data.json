{"componentChunkName":"component---src-templates-post-template-tsx","path":"/blog/2016-1-18-my-thoughts-on-statefulviewcontroller","result":{"data":{"markdownRemark":{"html":"<p>I had a chance to play a little bit with a nice pod that is called StatefulViewController, created by Alexander Schuch. StatefulViewController works with both <code>UIView</code> and <code>UIViewController</code>, and allows you to introduce placeholders for their different states: Loading, Error, Empty or Content. Everything is based on an intuitive protocol and after providing your placeholder views and implementing required methods everything works like a charm. You can find this pod on Alexander's <a href=\"https://github.com/aschuch/StatefulViewController\">github</a>. I've looked into the code of this pod and I found a few things that I want to share with you today.</p>\n<h3>StateMachine</h3>\n<p>Whole idea is based on ViewStateMachine, which handles transitions of views that you have assigned to each state. All states are represented by this nice enum</p>\n<script src=\"https://gist.github.com/Eluss/3b3b2b78e7b286bc6e5c.js\"></script>\n<p>Notice, that this enum conforms to <code>Equatable</code> protocol, which lets us implement <code>\"==\"</code> operator for this enum. When you do this, standard library provides an implementation for <code>\"!=\"</code>. This move allows us to compare states later on.</p>\n<script src=\"https://gist.github.com/Eluss/f0672e20fa6690f7e492.js\"></script>\n<h3>Subscript</h3>\n<p>Another thing that was interesting for me was <code>subscript</code> provided for a <code>ViewStateMachine</code> class.\"You use subscripts to set and retrieve values by index without needing separate methods for setting and retrieval.\" - note from Apple.</p>\n<script src=\"https://gist.github.com/Eluss/8d3920fa7b3878a8f105.js\"></script>\n<p>Example use: </p>\n<script src=\"https://gist.github.com/Eluss/1bc3e208110fd3e86ebf.js\"></script>\n<h3>Extension property</h3>\n<p>Normally, you can't add a property to a class via an extension, but you can achive this using an associated object.</p>\n<script src=\"https://gist.github.com/Eluss/1586b4a35898a136bc56.js\"></script>\n<h3>Documentation</h3>\n<p>I really liked the documentation that was provided with this pod. In Objective-C we had a nice header file, which was pretty easy to read from. Here we have two files. <code>StatefulViewController.swift</code> file, which provides nice documentation and <code>StatefulViewControllerImplementation.swift</code> which containts implementation of <code>StatefulViewController</code> class.</p>\n<p>It was really interesting code, which taught me some new thing. I hope that you liked it too!</p>\n<p><em>This article is cross-posted with my <a href=\"http://eluss.github.io/\">my personal blog</a>.</em></p>","excerpt":"I had a chance to play a little bit with a nice pod that is called StatefulViewController, created by Alexander Schuchâ€¦","frontmatter":{"slug":null,"title":"My thoughts on - StatefulViewController","description":null,"author":"eliasz","tags":["iOS"],"date":"2016-01-17T23:00:00.000Z","image":null},"timeToRead":1,"fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2016-1-18-my-thoughts-on-statefulviewcontroller.md"},"site":{"siteMetadata":{"siteUrl":"https://brightinventions.pl"}}},"pageContext":{"fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2016-1-18-my-thoughts-on-statefulviewcontroller.md"}},"staticQueryHashes":["2189233960","3181594896"]}