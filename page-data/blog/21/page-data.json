{"componentChunkName":"component---src-templates-blog-list-template-tsx","path":"/blog/21","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"ef827c76-51e0-5dc9-a09d-afad095eabff","fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2015-06-01-cocoaheads-automate-your-ios-deployment.md","excerpt":"Here come the slides from a talk I gave at the last Cocoaheads Tricity meeting. It's titled \"Automate your iOS deployment a bit\"\nand shows how we approach build and deployment automation at Bright Inventions. In just a few days we're going to publish our \"generate-ios\" Yeoman generator on Github. We welcome you to join us at next Cocoaheads Tricity meetings where we talk and learn about Cocoa, Swift, Objective-C, UX/UI design and everything else related to creating apps on this platform.","frontmatter":{"excerpt":null,"comments":true,"image":null,"author":"michal","author_id":null,"title":"[CocoaHeads Tricity] Automate your iOS deployment a bit","tags":["iOS","CocoaHeads","GYP","generate-ios","automation","TeamCity"],"date":"2015-05-31T22:00:00.000Z"},"fields":{"slug":"/blog/2015-06-01-cocoaheads-automate-your-ios-deployment"}}},{"node":{"id":"72e6095b-06f4-5e17-bffd-ac97cf329707","fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2015-05-27-ios-layouts-for-web-developers.md","excerpt":"Almost all of my past development experience is centered around the web. Just recently I had an opportunity to dive into an iOS development and while I enjoy it, I miss a lot of things from the web development world. I've quickly discovered that applying the techniques and approaches directly from the web is often not possible. Sometimes I had to switch to the different mindset than the one I'm used to. To make things easier, I was looking for an iOS begginer guide targeted specifically to the…","frontmatter":{"excerpt":"Recently I had an opportunity to dive into an iOS development and while I enjoy it, I miss a lot of things from the web development world. I was looking for an iOS begginer guide targeted specifically to the web developers like me, but I haven't found any. This is how the idea for this series of blog posts was born.","comments":true,"image":null,"author":"adam","author_id":null,"title":"iOS layouts for web developers","tags":["iOS"],"date":"2015-05-27T00:00:00.000Z"},"fields":{"slug":"/blog/2015-05-27-ios-layouts-for-web-developers"}}},{"node":{"id":"ae7beb21-0d4e-5c95-beeb-384b5b8b21cc","fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2015-05-21-ios-layouts-for-web-developers-5-events-handling.md","excerpt":"Time to finish the iOS layouts for web developers series with the post about events. Earlier in the series you might read about the controls, control positioning, managing the appearance and CSS properties replacements. Touchy state of the mobile touch events Both in the web and in iOS we employ event-based models to define and control the interactions between our application and the external world, especially the user. The general idea of listening and reacting to particular events on specific…","frontmatter":{"excerpt":"Time to finish the iOS layouts for web developers series with the post about events. Both the web and iOS employ similar ideas, but the set of events is distinct and we need to be aware there are different ways to interact with the classical web than with the mobile device.","comments":true,"image":null,"author":"adam","author_id":null,"title":"iOS layouts for web developers #5 - events handling","tags":["iOS"],"date":"2015-05-21T00:00:00.000Z"},"fields":{"slug":"/blog/2015-05-21-ios-layouts-for-web-developers-5-events-handling"}}},{"node":{"id":"1cbc0352-bb97-53a1-ab2a-880d2b3c4304","fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2015-04-13-using-file-resources-in-android-unit-test.md","excerpt":"Since version 1.1 of Android Gradle Plugin we can run unit test on a local JVM on our development machine. It's still experimental feature but I've found it's fully usable.\nFinally Android developers have lighweight build-in tool for unit testing :)\nThe times when we need third party libraries to test unit classes quickly seems to be gone :) \nI had to implement a parser which operates on JSON data returned from REST API. \nThe first thing I thought was to get some sort of responses from the…","frontmatter":{"excerpt":"Since version 1.1 of Android Gradle Plugin we can run unit test on a local JVM on our development machine. In this article I'll demonstrate how to make local resources available in unit test case.","comments":true,"image":null,"author":"mateuszklimek","author_id":null,"title":"Using the file resources in Android POJO unit test","tags":["android","unit-testing"],"date":"2015-04-12T22:00:00.000Z"},"fields":{"slug":"/blog/2015-04-13-using-file-resources-in-android-unit-test"}}},{"node":{"id":"4c6f01f4-f69d-5e32-befc-63f92b418297","fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2015-04-10-ios-layouts-for-web-developers-4-css-properties-replacements.md","excerpt":"This is the fourth post in the iOS layouts for web developers series. The previous ones were about the controls, control positioning and managing the appearance. This time something more lightweight, I hope. We’ll go through various visual aspects of the controls and see how we can set it up, compared to CSS. Let’s start with the basics - margin and padding. Box model & controlling controls spacing There was a lot of confusion in the past in the web world around the box model, i.e. whether the…","frontmatter":{"excerpt":"In the fourth post in the iOS layouts for web developers series it's time for something more lightweight. We’ll go through various visual aspects of the controls and see how we can set it up, compared to CSS.","comments":true,"image":null,"author":"adam","author_id":null,"title":"iOS layouts for web developers #4 - CSS properties replacements","tags":["iOS"],"date":"2015-04-10T00:00:00.000Z"},"fields":{"slug":"/blog/2015-04-10-ios-layouts-for-web-developers-4-css-properties-replacements"}}},{"node":{"id":"1b801fd3-313d-5f0c-8289-2a5509b882e1","fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2015-04-03-ios-layouts-for-web-developers-3-managing-appearance.md","excerpt":"This is the third part of the iOS layouts for web developers series. The first part was about the controls, the second about its positioning. Now I’m going to tackle how to approach managing the controls appearance - something that we have CSS for in the web. CSS equivalent? CSS was first standardised back in 1996, it was around early 2000s when it became ubiquitous. We've then left behind the times when the <center> tag was used to align content and view specific definitions like fonts or…","frontmatter":{"excerpt":"In the web, we've left behind the times when the view specific definitions like fonts or colors were scattered all over through the HTML structure. Now we’re looking at the iOS layouts. How do we maintain the content vs. presentation separation in iOS?","comments":true,"image":null,"author":"adam","author_id":null,"title":"iOS layouts for web developers #3 - managing the appearance","tags":["iOS"],"date":"2015-04-03T00:00:00.000Z"},"fields":{"slug":"/blog/2015-04-03-ios-layouts-for-web-developers-3-managing-appearance"}}},{"node":{"id":"73840990-64df-5db2-b4a9-5922b5168bf2","fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2015-04-01-cocoaheads-tricity-do-not-reinvent-the-wheel.md","excerpt":"On Tuesday 31th March 2015 I gave a presentation about most popular Cocoa libraries and CocoaPods (http://cocoapods.org) at the local Cocoaheads Tricity group meeting, which we are now co-organizing.  If you have ever wondered what libraries we use at Bright Inventions or you didn't know that you can divide your app into private Pods you may find this presentation interesting. If you are interested in Apple technologies we invite you to Cocoaheads Tricity meetings where we talk and learn about…","frontmatter":{"excerpt":null,"comments":true,"image":null,"author":"mateusz","author_id":null,"title":"[CocoaHeads Tricity] Do not reinvent the wheel - most popular Cocoa libraries","tags":["iOS","CocoaHeads","CocoaPods"],"date":"2015-03-31T22:00:00.000Z"},"fields":{"slug":"/blog/2015-04-01-cocoaheads-tricity-do-not-reinvent-the-wheel"}}},{"node":{"id":"67c5507c-d513-58e0-96b0-7b83121e965d","fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2015-03-24-ios-layouts-for-web-developers-2-control-positioning.md","excerpt":"In the first part of the iOS layouts for web developers series I’ve discussed controls as the basic building blocks that comprises the layout in iOS world and how that compares to HTML. I haven’t tackled anything about how and where these controls are drawn on the screen. The matter is complex enough so that here is the separate post only about it. Let’s start with restating the acknowledgement that my overall goal here is trying to find best analogies to the web development world, not creating…","frontmatter":{"excerpt":"Continuing the series of posts that looks into the iOS world from the web developer perspective. In the second post we're discussing multiple approaches to setting up where and how the controls on iOS are displayed and how it differs from HTML document flow.","comments":true,"image":null,"author":"adam","author_id":null,"title":"iOS layouts for web developers #2 - control positioning","tags":["iOS"],"date":"2015-03-23T23:00:00.000Z"},"fields":{"slug":"/blog/2015-03-24-ios-layouts-for-web-developers-2-control-positioning"}}},{"node":{"id":"25870599-7e7a-552c-9066-9aca78635d64","fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2015-03-17-setup-appcode-to-work-with-rtl-languages.md","excerpt":"Question How to make iOS Simulator work with Right-To-Left languages when it's started from AppCode? Answer Paste these two parameters: into `program arguments' in Run/Debug Configuration.\n\nappcode-rtl-config\n\nKeep in mind that if you kill the app and start it again in simulator, parameters wouldn't be included for the new process. Thus the app will start in the common LTR mode.\nThe only way to restart the app in RTL is to run the app from AppCode again. See this post on my personal blog.","frontmatter":{"excerpt":"How to make iOS Simulator work with Right-To-Left languages when it's started from AppCode?","comments":true,"image":null,"author":"mateuszklimek","author_id":null,"title":"Setup AppCode to start Simulator in RTL mode","tags":["iOS"],"date":"2015-03-16T23:00:00.000Z"},"fields":{"slug":"/blog/2015-03-17-setup-appcode-to-work-with-rtl-languages"}}},{"node":{"id":"e80cdc98-0b79-5ffe-b9f6-b791a684e678","fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2015-02-27-ios-layouts-for-web-developers-1-basic-building-blocks.md","excerpt":"In the first part of iOS layouts for web developers series I'll have a look at the basic building blocks of the view layer in iOS and compare it to what HTML offers. First, we need to shift our mindset a bit and accept the fact we need to give up some control (pun intended) over our views to the iOS. Elements vs. controls In HTML, everything we can see in the browser is built upon the low-level HTML elements (tags) organized within a hierarchy. The browser draws the elements visual…","frontmatter":{"excerpt":"In the first part of iOS layouts for web developers series I'll have a look at the basic building blocks of the view layer in iOS and compare it to what HTML offers. First, we need to shift our mindset a bit and accept the fact we need to give up some control over our views to the iOS.","comments":true,"image":null,"author":"adam","author_id":null,"title":"iOS layouts for web developers #1 - basic building blocks","tags":["iOS"],"date":"2015-02-26T23:00:00.000Z"},"fields":{"slug":"/blog/2015-02-27-ios-layouts-for-web-developers-1-basic-building-blocks"}}}]}},"pageContext":{"limit":10,"skip":200,"numPages":23,"currentPage":21}},"staticQueryHashes":[]}