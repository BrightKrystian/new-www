{"componentChunkName":"component---src-templates-post-template-tsx","path":"/blog/desymbolicate-crash-reports","result":{"data":{"markdownRemark":{"html":"<p>I was struggling again with desymbolicating of iOS app crash logs and thought that it would be nice\nto have a handy script that is a bit easier to use than the <a href=\"http://stackoverflow.com/a/4954949/59666\">multi step process</a> I had been using thus far. There's no rocket science in it,\njust a simple script named <strong>desym</strong> that seems to work for me and probably will require more than\none adjustment to work in general.</p>\n<p>The source code is <a href=\"https://github.com/bright/desym\">here on GitHub</a>.</p>\n<p>The idea is to put .ipa and .dsym.zip file in the same directory and then execute\n<code>./desym.sh MEMORY_ADDRESS(ES)</code>. It will automatically unpack dSYM and ipa\ninto temporary directory, run <code>atos</code>, output results to the console and clean after itself.</p>\n<p>What it means for me is that I can just download respective ipa and dSYM files\nfrom Hockeyapp, run <strong>desym</strong> with memory address from the crash log and\nsee the faulty line right away without manual files juggling.</p>","excerpt":"I was struggling again with desymbolicating of iOS app crash logs and thought that it would be nice\nto have a handy script that is a bitâ€¦","frontmatter":{"slug":null,"title":"Desymbolicate crash reports from the command line","description":null,"author":"michal","tags":["iOS"],"date":"2015-10-18T22:00:00.000Z","image":null},"timeToRead":1,"fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2015-10-19-desymbolicate-crash-reports.md"},"site":{"siteMetadata":{"siteUrl":"https://brightinventions.pl"}}},"pageContext":{"fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2015-10-19-desymbolicate-crash-reports.md"}},"staticQueryHashes":["2189233960","3181594896"]}