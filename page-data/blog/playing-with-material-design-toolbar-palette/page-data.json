{"componentChunkName":"component---src-templates-post-template-tsx","path":"/blog/playing-with-material-design-toolbar-palette","result":{"data":{"markdownRemark":{"html":"<p>Since Android L(ollipop) was presented in June at <a href=\"https://www.youtube.com/watch?v=wtLJPvx7-ys\">Google I/O</a>, only two devices on market can run it officially. Nexus 6 and Nexus 9 were released a week ago, and these two guys are ready to go with most recent system from Google, but what about other devices? My Nexus 5 still tryin update everyday, but still no effects :)\nHopefully, we can use some part of Material Design with devices running <strong>Android 2.1 and higher</strong>, because most of implementation was placed in android-support-v7.</p>\n<p>I wrote simple app which displays images in grid with possibility to pick them to see them in full size with ActionBar colors based on picked image. App uses new classes: <a href=\"http://developer.android.com/reference/android/support/v7/graphics/Palette.html\">Palette</a> and <a href=\"http://developer.android.com/reference/android/support/v7/widget/Toolbar.html\">Toolbar</a>.</p>\n<p>It's looks like this:<br /><br />\n<img src=\"%7B%7Bsite.url%7D%7D/images/palette-example1.png\" alt=\"first screenshot\">\n<img src=\"%7B%7Bsite.url%7D%7D/images/palette-example2.png\" alt=\"second screenshot\">\n<img src=\"%7B%7Bsite.url%7D%7D/images/palette-example3.png\" alt=\"third screenshot\">\n<img src=\"%7B%7Bsite.url%7D%7D/images/palette-example4.png\" alt=\"fourth screenshot\"></p>\n<p>Let's code.<br />\nAll dependencies we need:</p>\n<pre><code class=\"language-groovy\">dependencies {\n    compile 'com.android.support:appcompat-v7:21.0.0'\n    compile 'com.android.support:palette-v7:21.0.0'\n    compile 'com.squareup.picasso:picasso:2.4.0'\n}\n</code></pre>\n<p>as you can see Google split android.support and put Palette as separate lib (similar to <a href=\"http://developer.android.com/reference/android/support/v7/widget/RecyclerView.html\">RecyclerView</a> and <a href=\"http://developer.android.com/reference/android/support/v7/widget/CardView.html\">CardView</a>). I used <a href=\"http://square.github.io/picasso/\">Picasso</a> to simple load images from web.</p>\n<p>Next, define AppTheme with parent as <code>Theme.AppCombat</code>. You can also specify <code>colorPrimary</code> and <code>accentColor</code> which are used by framework to color surface background of widgets such as text fields, checkboxes etc.</p>\n<pre><code class=\"language-xml\">&#x3C;style name=\"AppTheme\" parent=\"Theme.AppCompat\">\n  &#x3C;item name=\"colorPrimary\">@color/black&#x3C;/item>\n&#x3C;/style>\n&#x3C;color name=\"black\">#000000&#x3C;/color>\n</code></pre>\n<p>Apply style to application:</p>\n<pre><code class=\"language-xml\">&#x3C;application android:theme=\"@style/AppTheme\" />\n</code></pre>\n<br />\nApp has two activities. First `MainActvity` extends `ActionBarActivity` so framework will show window with `ActionBar` (see first screenshot with GridView).  `ImageActivity` is just `Activity`, so by default window will be rendered without `ActionBar`. But look at other screenshots, they have an `ActionBar`, but wait... actually it's `Toolbar`!\n<p><code>Toolbar</code> is more flexible (easier to customize) <strong>standard</strong> <code>View</code>, so you can put it everywhere in layout, multiple times... and it still can act as <code>ActionBar</code> (see <a href=\"https://developer.android.com/reference/android/app/Activity.html#setActionBar(android.widget.Toolbar)\">setActionBar</a>)</p>\n<p>Let's look at the layout file:</p>\n<pre><code class=\"language-xml\">&#x3C;LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:orientation=\"vertical\"\n    android:background=\"@color/black\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    &#x3C;android.support.v7.widget.Toolbar\n        android:id=\"@+id/toolbar\"\n        android:background=\"@drawable/rectangle\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"@dimen/abc_action_bar_default_height_material\"\n        android:title=\"@string/app_name\"\n        />\n\n    &#x3C;ImageView\n        android:id=\"@+id/image\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:src=\"@drawable/rectangle\"\n        android:scaleType=\"center\"\n        />\n\n&#x3C;/LinearLayout>\n</code></pre>\n<p>It's simple. Nothing special here, except using of <code>Toolbar</code>.</p>\n<p>Finally we can use <code>Pallete</code> to extract prominent colors from image and change style of <code>Toolbar</code> at runtime.</p>\n<pre><code class=\"language-java\">final Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\nfinal ImageView image = (ImageView) findViewById(R.id.image);\ntarget = new Target() {\n    @Override\n    public void onBitmapLoaded(final Bitmap bitmap, Picasso.LoadedFrom from) {\n        Palette.generateAsync(bitmap, new Palette.PaletteAsyncListener() {\n            public void onGenerated(Palette palette) {\n                image.setImageBitmap(bitmap);\n                int defaultColor = getResources().getColor(R.color.black);\n                toolbar.setBackgroundColor(palette.getLightVibrantColor(defaultColor));\n                toolbar.setTitleTextColor(palette.getDarkMutedColor(defaultColor));\n                toolbar.setTitle(getString(R.string.app_name));\n            }\n        });\n    }\n};\nPicasso.with(this)\n        .load(getIntent().getStringExtra(\"url\"))\n        .into(target);\n</code></pre>\n<p>Look at the screenshots, I think they look pretty well and we didn't need a graphic designer to choose correct colors ;)</p>\n<br />\nSee [full source code at github](https://github.com/mklimek/palette-sample).<br />\nSee [Creating Apps with Material Design](https://developer.android.com/training/material/.html).<br />\nSee [Material Design specification](http://www.google.com/design/spec/material-design/introduction.html#).\n<p>See this post on my <a href=\"http://mklimek.github.io/playing-with-material-design-toolbar-palette/\">personal blog</a>.</p>","excerpt":"Since Android L(ollipop) was presented in June at Google I/O, only two devices on market can run it officially. Nexus 6 and Nexus 9 wereâ€¦","frontmatter":{"slug":null,"title":"Playing with Material Design, Toolbar and Palette","description":null,"author":"mateuszklimek","tags":["android","materialdesign","android-support-library"],"date":"2014-11-10T23:00:00.000Z","image":null},"timeToRead":3,"fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2014-11-11-playing-with-material-design-toolbar-palette.md"},"site":{"siteMetadata":{"siteUrl":"https://brightinventions.pl"}}},"pageContext":{"fileAbsolutePath":"/home/runner/work/new-www/new-www/src/mdData/blog/2014-11-11-playing-with-material-design-toolbar-palette.md"}},"staticQueryHashes":["2189233960","3181594896"]}